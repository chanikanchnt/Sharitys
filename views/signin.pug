html
    head
        title signin
        script(src="https://www.gstatic.com/firebasejs/5.8.5/firebase.js")
        script(src="https://www.gstatic.com/firebasejs/ui/4.7.1/firebase-ui-auth.js")
        link(type="text/css", rel="stylesheet", href="https://www.gstatic.com/firebasejs/ui/4.7.1/firebase-ui-auth.css")
        script
            include firebaseConfig.js
        script.
            var uiConfig = {
                callbacks: {
                    signInSuccessWithAuthResult: function(authResult, redirectUrl) {
                    // User successfully signed in.
                    // Return type determines whether we continue the redirect automatically
                    // or whether we leave that to developer to handle.
                        console.log("in callback")
                        var user = authResult.user
                        user.getIdToken()
                            .then((idToken) => {
                                //- setClaims(idToken)
                                $.post(
                                '/auth/setCustomClaims',
                                {
                                    idToken: idToken
                                },
                                (data, status) => {
                                    // This is not required. You could just wait until the token is expired
                                    // and it proactively refreshes.
                                    console.log(data)
                                    if(status == 'success' && data){
                                        const json = JSON.parse(data)
                                        if(json && json.status == 'success'){
                                            // Force token refresh. The token claims will contain the additional claims.
                                            user.getIdToken(true)
                                        }
                                    }
                                }
                            )
                            }).catch((error) => {
                                console.log(error)
                            })
                        return true;
                    },
                    uiShown: function() {
                        // The widget is rendered.
                        // Hide the loader.
                        document.getElementById('loader').style.display = 'none';
                    }
                },
                signInSuccessUrl: '/auth/redirect',
                // Opens IDP Providers sign-in flow in a popup.
                signInFlow: 'popup',
                signInOptions: [ 
                    // Google sign in option 
                    firebase.auth.GoogleAuthProvider.PROVIDER_ID, 
                    firebase.auth.FacebookAuthProvider.PROVIDER_ID,
                    firebase.auth.EmailAuthProvider.PROVIDER_ID
                ], 
            
                // Terms of service url/callback. 
                tosUrl: '<your-tos-url>', 
            
                // Privacy policy url/callback. 
                privacyPolicyUrl: function () { 
                    window.location.assign('/<your-privacy-policy-url>'); 
                } 
            }
            // Initialize the FirebaseUI Widget using Firebase. 
            var ui = new firebaseui.auth.AuthUI(firebase.auth());
            
            // The start method will wait until the DOM is loaded. 
            ui.start('#firebaseui-auth-container', uiConfig);

    body
        div(id='firebaseui-auth-container')
        div(id='loader') loading...
        
        